#FROM Node
FROM node:19 as build

#Working Directory
WORKDIR /usr/local/app

# copy the working irectory to optimize the docker layer
COPY ./ /usr/local/app/

# Copy package.json and package-lock.json first to optimize Docker layer caching
COPY ./package.json /app/package.json
COPY ./package-lock.json /app/package-lock.json

# Install dependencies
RUN npm cache clean --force
RUN npm install --legacy-peer-deps


# Copy the rest of the source code
# COPY ./src /app/src
# COPY ./angular.json /app/angular.json


# Build the Angular app
RUN ng build --configuration production


# FROM nginx

FROM nginx:alpine

# Copy the built Angular app to the Nginx directory
COPY --from=build /usr/local/app/dist/ElearningManagement /usr/share/nginx/html

# Expose port 80 for HTTP traffic
EXPOSE 80